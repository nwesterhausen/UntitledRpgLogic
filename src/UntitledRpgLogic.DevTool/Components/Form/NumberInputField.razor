@*
    A reusable component for a number input field.
    It wraps the standard InputNumber component with a label and form control styling.
*@
@typeparam T
@inherits InputBase<T>

<div class="form-control">
    <label class="label">
        <span class="label-text">@Label</span>
    </label>
    <InputNumber @bind-Value="CurrentValue" class="input input-bordered w-full" />
    <div class="label">
        <span class="label-text-alt"><ValidationMessage For="() => CurrentValue" /></span>
    </div>
</div>

@code {
    /// <summary>
    /// The text to display in the label for this input field.
    /// </summary>
    [Parameter]
    public string Label { get; set; } = string.Empty;

    /// <summary>
    /// This method is required by InputBase, but InputNumber handles parsing internally.
    /// We can provide a minimal implementation to satisfy the contract.
    /// </summary>
    protected override bool TryParseValueFromString(string? value, out T result, out string validationErrorMessage)
    {
        if (BindConverter.TryConvertTo<T>(value, System.Globalization.CultureInfo.CurrentCulture, out var parsedValue))
        {
            result = parsedValue!;
            validationErrorMessage = string.Empty;
            return true;
        }

        result = default!;
        validationErrorMessage = $"The value '{value}' is not a valid number.";
        return false;
    }
}
