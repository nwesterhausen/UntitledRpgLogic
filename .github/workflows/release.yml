name: Publish Release

on:
  push:
    branches:
      - main

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  release:
    name: Build and Publish Release
    runs-on: ubuntu-latest
    # Permissions are required to create a release and publish packages.
    permissions:
      contents: write
      packages: write
    steps:
      - name: 📝 Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0 # full depth required for gitversion

      - name: ⚙️ Setup .NET 8 & 9
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        id: setup-dotnet
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: 🥟 Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: latest

      - name: 📦 Cache DotNet Workloads
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.dotnet # Path to cache for SDKs and Workloads
          key: ${{ runner.os }}-dotnet-workloads-${{ hashFiles('global.json') }}-${{ steps.setup-dotnet.outputs.dotnet-version }}
          restore-keys: |
            ${{ runner.os }}-dotnet-workloads-

      - name: 📦 Cache NuGet packages
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: 📦 Cache DotNet Tools
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: ~/.dotnet/tools # Path to cache for global tools
          key: ${{ runner.os }}-dotnet-tools-${{ hashFiles('.config/dotnet-tools.json') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-tools-

      - name: 🌳 Install GitVersion
        uses: gittools/actions/gitversion/setup@1918cb0db30e20631f273e322d08c48af11db368 #v4.0.1
        with:
          versionSpec: '6.x'

      - name: 🔢 Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@1918cb0db30e20631f273e322d08c48af11db368 #v4.0.1

      - name: 💬 Display Version Info
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"

      - name: 📥 Restore dependencies
        run: |
          dotnet workload restore
          dotnet tool restore
          dotnet restore

      - name: 🔨 Build
        run: dotnet build --configuration Release --no-restore

      - name: 🚀 Test
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: 📦 Create NuGet packages
        run: dotnet pack --configuration Release --no-build --output ${{ env.NuGetDirectory }}

      - name: 📤 Upload NuGet packages to GitHub Packages
        run: |
          for file in $(find ${{ env.NuGetDirectory }} -name "*.nupkg" ! -name "*.symbols.nupkg" ! -name "*.snupkg"); do
            echo "Publishing $file"
            dotnet nuget push "$file" --api-key "${{ secrets.GITHUB_TOKEN }}" --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --skip-duplicate
          done

      - name: 🎉 Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          name: Release v${{ steps.gitversion.outputs.semVer }}
          body: ${{ steps.gitversion.outputs.notes }}
          draft: false
          prerelease: ${{ steps.gitversion.outputs.preReleaseTag != '' }}
          files: ${{ env.NuGetDirectory }}/*.nupkg
          make_latest: ${{ steps.gitversion.outputs.preReleaseTag == '' }}
