name: Deploy Dev Tooling App

on:
  push:
    # This will only run on tags that match v*.*.* (e.g. v1.0.0)
    tags:
      - 'v*.*.*'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "devtool"
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy Dev Tool
    runs-on: ubuntu-latest
    steps:
      - name: üìù Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Setup .NET 9
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5
        id: setup-dotnet-cf
        with:
          dotnet-version: 9.0.x

      - name: ü•ü Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version: latest

      - name: üì¶ Cache DotNet Workloads
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.dotnet # Path to cache for SDKs and Workloads
          key: ${{ runner.os }}-dotnet-workloads-${{ hashFiles('global.json') }}-${{ steps.setup-dotnet-cf.outputs.dotnet-version }}
          restore-keys: |
            ${{ runner.os }}-dotnet-workloads-

      - name: üì¶ Cache NuGet packages
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: üì¶ Cache DotNet Tools
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.dotnet/tools # Path to cache for global tools
          key: ${{ runner.os }}-dotnet-tools-${{ hashFiles('.config/dotnet-tools.json') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-tools-

      - name: üì• Restore dependencies
        run: |
          cd ${{ github.workspace }}/src
          dotnet workload restore
          dotnet tool restore
          dotnet restore

      - name: üöÄ Publish Dev Tool
        run: |
          cd ${{ github.workspace }}/src
          dotnet publish UntitledRpgLogic.DevTool/UntitledRpgLogic.DevTool.csproj -c Release -o ./blazor_publish_output --nologo

      - name: ‚òÅÔ∏è Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          cd ${{ github.workspace }}/src
          bunx wrangler pages deploy ./blazor_publish_output/wwwroot --project-name=${{ secrets.CLOUDFLARE_PAGES_PROJECT_NAME_DEVTOOL }} --commit-dirty=true
